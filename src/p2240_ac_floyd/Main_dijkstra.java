package p2240_ac_floyd;import java.util.HashMap;import java.util.Scanner;public class Main_dijkstra {	static boolean dijkstra(int v, int n, double[][] edges) {		 		boolean s[] = new boolean[n];		double dist[] = new double[n];		int path[] = new int[n];		for (int i = 0; i < n; i++) {			dist[i] = edges[v][i];			s[i] = false;			if (i != v && dist[i] < Double.MAX_VALUE) {				path[i] = v;			} else {				path[i] = -1;			}		}		s[v] = true; 		dist[v] = 0;		double max, w;		for (int i = 0; i < n - 1; i++) {			max = Double.MAX_VALUE;			int u = v;			for (int j = 0; j < n; j++)				if (s[j] == false && dist[j] < max) {					u = j;					max = dist[j];				}			s[u] = true;			for (int k = 0; k < n; k++) {				w = edges[u][k];				if (s[k] == false && w < Double.MAX_VALUE						&& dist[u] * w > dist[k]) {					dist[k] = dist[u] * w;					path[k] = u;				}			}		}		 		for (int i = 0; i < n; i++) {			if(i!=v && edges[v][i] * dist[i] > 1)				return true;		}		return false;	}	/**	 * @param args	 */	public static void main(String[] args) {		Scanner scanner = new Scanner(System.in);		int n = scanner.nextInt();		int index = 1;		while(n!=0){ 			HashMap<String, Integer> maps = new HashMap<String,Integer>();			for (int i = 0; i < n; i++) {				maps.put(scanner.next(), maps.size());			}			int  m = scanner.nextInt();			double[][] edges = new double[n][n];			for (int i = 0; i < n; i++) {				for (int j = 0; j < n; j++) {					if(i!=j)						edges[i][j] = 0;					else {						edges[i][j] = 1;					}				}			}			for (int j = 0; j < m; j++) {				int start = maps.get(scanner.next());				double value = scanner.nextDouble();				int end = maps.get(scanner.next());				edges[start][end] = value;			}			boolean flag = false;			for (int startPoint = 0; startPoint < n; startPoint++) {				flag = dijkstra(startPoint, n, edges);				if(flag == true)					break;			}			if (flag) {				System.out.println("Case " + index +": Yes");			}else {				System.out.println("Case " + index +": No");			}						index++;			n= scanner.nextInt();		}	}}