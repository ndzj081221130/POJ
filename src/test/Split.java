package test;import java.io.*;public class Split {	public static void outDegree(String filename, String outfile) {		File f = null;		BufferedWriter output = null;		String str = null;		try {			FileInputStream fis = new FileInputStream(filename);			InputStreamReader isr = new InputStreamReader(fis);// , "UTF-8"			f = new File(outfile);			output = new BufferedWriter(new FileWriter(f));			BufferedReader br = new BufferedReader(isr);			br.readLine();			str = br.readLine();			double currentPoint = 0.0;			while (str != null) {				String out = "";				if (str.contains(":")) {					String[] part = str.split(":");					currentPoint = Double.parseDouble(part[1]);				} else {					out = str + "," + currentPoint + ",degree";					out += '\n';					output.write(out);				}				str = br.readLine();			}		} catch (IOException ioe) {			System.out.println(ioe);		} catch (Exception e) {			System.out.println(e);		} finally {			if (output != null)				try {					output.close();				} catch (IOException e) {					e.printStackTrace();					System.out.println(str);				}		}	}	public static void outEmotion(String filename, String outfile) {		File f = null;		BufferedWriter output = null;		String str = null;		try {			FileInputStream fis = new FileInputStream(filename);			InputStreamReader isr = new InputStreamReader(fis);// , "UTF-8"			f = new File(outfile);			output = new BufferedWriter(new FileWriter(f));			BufferedReader br = new BufferedReader(isr);			br.readLine();			str = br.readLine();			double currentPoint = 0.0;			while (str != null) {				String[] arrStrings = str.split("\t");				if (arrStrings.length >= 4) {					if (arrStrings[3].equals("正面")) {						String out = "";						out = arrStrings[1] + ",1.0,emotion";						out += '\n';						output.write(out);					} else if (arrStrings[3].equals("负面")) {						String out = "";						out = arrStrings[1] + ",-1.0,emotion";						out += '\n';						output.write(out);					}				}				str = br.readLine();			}		} catch (IOException ioe) {			System.out.println(ioe);		} catch (Exception e) {			System.out.println(e);		} finally {			if (output != null)				try {					output.close();				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();					System.out.println(str);				}		}	}	public static void outNot(String filename, String outfile) {		File f = null;		BufferedWriter output = null;		String str = null;		try {			FileInputStream fis = new FileInputStream(filename);			InputStreamReader isr = new InputStreamReader(fis);// , "UTF-8"			f = new File(outfile);			output = new BufferedWriter(new FileWriter(f));			BufferedReader br = new BufferedReader(isr);			br.readLine();			str = br.readLine();			double currentPoint = -1.0;			while (str != null) {				String out = "";				out = str.trim() + "," + currentPoint + ",not";				out += '\n';				output.write(out);				str = br.readLine();			}		} catch (IOException ioe) {			System.out.println(ioe);		} catch (Exception e) {			System.out.println(e);		} finally {			if (output != null)				try {					output.close();				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();					System.out.println(str);				}		}	}	public static void outNegative(String filename, String outfile) {		File f = null;		BufferedWriter output = null;		String str = null;		try {			FileInputStream fis = new FileInputStream(filename);			InputStreamReader isr = new InputStreamReader(fis);// , "UTF-8"			f = new File(outfile);			output = new BufferedWriter(new FileWriter(f));			BufferedReader br = new BufferedReader(isr);			br.readLine();			str = br.readLine();			double currentPoint = -1.0;			while (str != null) {				String out = "";				if (str.length() > 0) {					out = str.trim() + "," + currentPoint + ",negative";					out += '\n';					output.write(out);				}				str = br.readLine();			}		} catch (IOException ioe) {			System.out.println(ioe);		} catch (Exception e) {			System.out.println(e);		} finally {			if (output != null)				try {					output.close();				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();					System.out.println(str);				}		}	}	public static void outPositive(String filename, String outfile) {		File f = null;		BufferedWriter output = null;		String str = null;		try {			FileInputStream fis = new FileInputStream(filename);			InputStreamReader isr = new InputStreamReader(fis);// , "UTF-8"			f = new File(outfile);			output = new BufferedWriter(new FileWriter(f));			BufferedReader br = new BufferedReader(isr);			br.readLine();			str = br.readLine();			double currentPoint = 1.0;			while (str != null) {				String out = "";				if (str.length() > 0) {					out = str.trim() + "," + currentPoint + ",positive";					out += '\n';					output.write(out);				}				str = br.readLine();			}		} catch (IOException ioe) {			System.out.println(ioe);		} catch (Exception e) {			System.out.println(e);		} finally {			if (output != null)				try {					output.close();				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();					System.out.println(str);				}		}	}	/**	 * @param args	 */	public static void main(String[] args) {		// TODO Auto-generated method stub//		Split.outDegree("degree.txt", "output_degree.txt");//		Split.outNot("negative.txt", "output_not.txt");//		Split.outNegative("negative_comment.txt", "output_negative_comment.txt");//		Split.outNegative("negative_emotion.txt", "output_negative_emotion.txt");//		Split.outPositive("positive_comment.txt", "output_positive_comment.txt");//		Split.outPositive("positive_emotion.txt", "output_positive_emotion.txt");				Split.outEmotion("emotion.txt", "out_emotion.txt");	}}