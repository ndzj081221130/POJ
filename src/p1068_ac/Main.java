package p1068_ac;import java.util.Scanner;import java.util.Stack;public class Main {	/**	 * @param args	 */	public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner scanner = new Scanner(System.in);				int n = Integer.parseInt(scanner.nextLine());		for (int i = 0; i < n; i++) {			int length = Integer.parseInt(scanner.nextLine().trim());			String pSentence  = scanner.nextLine();			String[] arr = pSentence.split(" ");			System.out.println(getWsentence(length,arr));		}	}	private static String getWsentence(int length, String[] pSentenceArr) {		// TODO Auto-generated method stub		Stack<Character> stack = getStack(pSentenceArr);//		stack.		String[] parentheses = new String[length * 2];		for (int i = 0; i < parentheses.length; i++) {			Character character = stack.pop() ;			parentheses[parentheses.length - i - 1] = character+"";		}//		String[] paraStrings = (String[]) stack.toArray();//		System.out.println(stack);		int[] leftIndex = getLeftIndex(parentheses,length);		int[] rightIndex = getRightIndex(parentheses,length);		int[] num = new int[length];		int count = 0;		String string = "";		for (int i = 0; i < rightIndex.length; i++) {			num[count] = getNum(parentheses,leftIndex[i],rightIndex[i]);			string+=num[count] +" ";			count++;		}		return string.trim();	}	private static int getNum(String[] parentheses, int left, int right) {		// TODO Auto-generated method stub		int count = 0;		for(int i = left;i<=right;i++){			if (parentheses[i].equals(")")) {				count++;			}		}		return count;	}	private static int[] getRightIndex(String[] parentheses,int n) {		// TODO Auto-generated method stub		int[] res = new int[n];		int count = 0;		for (int i = 0; i < parentheses.length; i++) {			if(parentheses[i].equals(")")){				res[count] = i;//				System.out.print(res[count]);				count++;			}		}//		System.out.println();		return res;	}	private static int[] getLeftIndex(String[] paraStrings,int n) {		// TODO Auto-generated method stub		Stack<String> stack = new Stack<String>();		int[] res = new int[n];		int count = 0;		for (int i = 0; i < paraStrings.length; i++) {//			System.out.print(paraStrings[i]);			if (paraStrings[i].equals( "(") ) {				stack.push("(," + i);			}			else //if (paraStrings[i].equals( ")")) 				{				String string = stack.pop();				int index = Integer.parseInt(string.split(",")[1]);				res[count] = index ;//				System.out.print(res[count]+",");				count++;							}												}//		System.out.println();		return res;	}	private static Stack<Character> getStack(String[] pSentenceArr) {		// TODO Auto-generated method stub		Stack<Character> stack = new Stack<Character>();		int cur  = Integer.parseInt(pSentenceArr[0]);		for (int j = 0; j < cur; j++) {			stack.push('(');		}		stack.push(')');		for (int i = 1; i < pSentenceArr.length; i++) {			int next = Integer.parseInt(pSentenceArr[i]);//									if (cur == next) {				stack.push(')');			}else{				for (int j = cur; j < next; j++) {					stack.push('(');				}				stack.push(')');			}			cur = next;		}		return stack;	}}