package p3253_ac_type_long;import java.util.Scanner; public class Main {	/**	 * @param args	 */		public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner scanner = new Scanner(System.in);		int n = scanner.nextInt();		int[] planks = new int[n];		for (int i = 0; i < planks.length; i++) {			planks[i] = scanner.nextInt();		}				getHuffmanCode(planks,n);	}	private static void getHuffmanCode(int[] planks, int n) {		// TODO Auto-generated method stub		QuickSortLine(planks,0,n-1);//		print(planks);		int size = n;		long count = 0;		while(size > 1){			int add_first_second = planks[0] + planks[1];			count += add_first_second;			int[] temp = new int[size-1];			int index = 0; 			int i = 2;			boolean flag = false;			while(i < planks.length){				if (add_first_second <= planks[i] && flag == false) {					temp[index++] = add_first_second;					flag = true;				}else {					temp[index++] = planks[i++];				}			}			if (index < temp.length) {				temp[temp.length -1 ] = add_first_second;			}			planks = temp;//			print(planks);			size = temp.length;		}		System.out.println(count);	}	static void print(int[]arr){		for (int i = 0; i < arr.length; i++) {			System.out.print(arr[i]+",");		}		System.out.println();	}	private static void QuickSortLine(int[] array,int left,int right) {		// TODO Auto-generated method stub		if (left < right) {			int pivotpos = partitionLine(array,left,right);			QuickSortLine(array, left, pivotpos-1);			QuickSortLine(array, pivotpos+1, right);		}	}	private static int partitionLine(int[] array, int left, int right) {		int pivotpos = left;		int pivot = array[left];		for (int in = left+1; in <= right; in++) {			if (array[in] < pivot ) {				pivotpos++;				if (pivotpos != in) { 					SwapLine(array,pivotpos,in);				}			}					}		array[left] = array[pivotpos];		array[pivotpos] = pivot;		return pivotpos;	}	private static void SwapLine(int[] array, int pivotpos, int i) {		int temp = array[i];		array[i] = array[pivotpos];		array[pivotpos] = temp;	}	}